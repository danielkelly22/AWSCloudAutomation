#!/usr/bin/env ansible-playbook
---
- name: Configure AWS build agent
  hosts: all
  vars:
    tower_host: '{{ tower_host }}'
    tower_username: '{{ tower_username }}'
    tower_password: '{{ tower_password }}'
    PAT: '{{ PAT }}'
  tasks:
  - name: Enable repos
    become: yes
    yum:
      name: '{{ packages }}'
    vars:
      packages:
      - epel-release
      - https://centos7.iuscommunity.org/ius-release.rpm

  - name: Remove out of date git
    become: true
    yum:
      name: git
      state: absent

  - name: Install packages
    become: yes
    yum:
      name: '{{ packages }}'
      state: latest
    vars:
      packages:
      - python-pip
      - git2u
      - ansible
      - unzip

  - name: Install pip packages
    become: yes
    pip:
      name:
        - pexpect
        - ansible-tower-cli

  # - name: Create packer dir
  #   become: yes
  #   file:
  #     path: /usr/local/packer
  #     mode: '0755'

  # - name: Download and extract packer
  #   become: yes
  #   unarchive:
  #     src: https://releases.hashicorp.com/packer/1.5.5/packer_1.5.5_linux_amd64.zip
  #     dest: /usr/local/packer
  #     remote_src: yes

  # - name: Add packer to system-wide $PATH.
  #   command: PATH=$PATH:/usr/local/packer

  - name: Configure tower-cli credentials
    command: tower-cli config {{ item }}
    with_items:
    - host {{ tower_host }}
    - username {{ tower_username }}
    - password {{ tower_password }}

  - name: Create Agent folder
    file:
      path: '{{ ansible_env.HOME }}/agent'
      state: directory

  - name: Download and unarchive agent file
    unarchive:
      src: https://vstsagentpackage.azureedge.net/agent/2.165.2/vsts-agent-linux-x64-2.165.2.tar.gz
      dest: '{{ ansible_env.HOME }}/agent'
      remote_src: yes

  - name: Download agent dependencies
    become: yes
    command: '{{ ansible_env.HOME }}/agent/bin/installdependencies.sh'
    args:
      chdir: '{{ ansible_env.HOME }}/agent'

  - name: Configure agent
    expect:
      command: '{{ ansible_env.HOME }}/agent/config.sh'
      chdir: '{{ ansible_env.HOME }}/agent'
      responses:
        license agreement: Y
        server URL: https://dev.azure.com/amtrust/
        authentication type: ''
        personal access token: '{{ PAT }}'
        agent pool: AWS
        agent name: ''
        work folder: ''

  - name: Create systemd service for agent
    become: yes
    command: '{{ ansible_env.HOME }}/agent/svc.sh install'
    args:
      chdir: '{{ ansible_env.HOME }}/agent'

  - name: Start agent
    become: yes
    command: '{{ ansible_env.HOME }}/agent/svc.sh start'
    args:
      chdir: '{{ ansible_env.HOME }}/agent'
